(self.webpackChunkapp_scaffold=self.webpackChunkapp_scaffold||[]).push([[897],{"./src/apiClient.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{a:()=>apiEventSource,n:()=>apiFetch});var _basePath__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/basePath.ts");async function apiFetch(input,init){return fetch((0,_basePath__WEBPACK_IMPORTED_MODULE_0__.h)(input),init)}function apiEventSource(input){return new EventSource((0,_basePath__WEBPACK_IMPORTED_MODULE_0__.h)(input))}},"./src/app/settings/SettingsPage.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>SettingsPage_stories});var jsx_runtime=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),QueryClientProvider=__webpack_require__("./node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js"),apiClient=__webpack_require__("./src/apiClient.ts"),utils=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/utils.js"),modern_query=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/query.js"),notifyManager=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/notifyManager.js"),subscribable=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/subscribable.js"),QueryCache=class extends subscribable.Q{constructor(config={}){super(),this.config=config,this.#queries=new Map}#queries;build(client,options,state){const queryKey=options.queryKey,queryHash=options.queryHash??(0,utils.F$)(queryKey,options);let query=this.get(queryHash);return query||(query=new modern_query.X({client,queryKey,queryHash,options:client.defaultQueryOptions(options),state,defaultOptions:client.getQueryDefaults(queryKey)}),this.add(query)),query}add(query){this.#queries.has(query.queryHash)||(this.#queries.set(query.queryHash,query),this.notify({type:"added",query}))}remove(query){const queryInMap=this.#queries.get(query.queryHash);queryInMap&&(query.destroy(),queryInMap===query&&this.#queries.delete(query.queryHash),this.notify({type:"removed",query}))}clear(){notifyManager.jG.batch(()=>{this.getAll().forEach(query=>{this.remove(query)})})}get(queryHash){return this.#queries.get(queryHash)}getAll(){return[...this.#queries.values()]}find(filters){const defaultedFilters={exact:!0,...filters};return this.getAll().find(query=>(0,utils.MK)(defaultedFilters,query))}findAll(filters={}){const queries=this.getAll();return Object.keys(filters).length>0?queries.filter(query=>(0,utils.MK)(filters,query)):queries}notify(event){notifyManager.jG.batch(()=>{this.listeners.forEach(listener=>{listener(event)})})}onFocus(){notifyManager.jG.batch(()=>{this.getAll().forEach(query=>{query.onFocus()})})}onOnline(){notifyManager.jG.batch(()=>{this.getAll().forEach(query=>{query.onOnline()})})}},modern_mutation=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/mutation.js"),MutationCache=class extends subscribable.Q{constructor(config={}){super(),this.config=config,this.#mutations=new Set,this.#scopes=new Map,this.#mutationId=0}#mutations;#scopes;#mutationId;build(client,options,state){const mutation=new modern_mutation.s({mutationCache:this,mutationId:++this.#mutationId,options:client.defaultMutationOptions(options),state});return this.add(mutation),mutation}add(mutation){this.#mutations.add(mutation);const scope=scopeFor(mutation);if("string"==typeof scope){const scopedMutations=this.#scopes.get(scope);scopedMutations?scopedMutations.push(mutation):this.#scopes.set(scope,[mutation])}this.notify({type:"added",mutation})}remove(mutation){if(this.#mutations.delete(mutation)){const scope=scopeFor(mutation);if("string"==typeof scope){const scopedMutations=this.#scopes.get(scope);if(scopedMutations)if(scopedMutations.length>1){const index=scopedMutations.indexOf(mutation);-1!==index&&scopedMutations.splice(index,1)}else scopedMutations[0]===mutation&&this.#scopes.delete(scope)}}this.notify({type:"removed",mutation})}canRun(mutation){const scope=scopeFor(mutation);if("string"==typeof scope){const mutationsWithSameScope=this.#scopes.get(scope),firstPendingMutation=mutationsWithSameScope?.find(m=>"pending"===m.state.status);return!firstPendingMutation||firstPendingMutation===mutation}return!0}runNext(mutation){const scope=scopeFor(mutation);if("string"==typeof scope){const foundMutation=this.#scopes.get(scope)?.find(m=>m!==mutation&&m.state.isPaused);return foundMutation?.continue()??Promise.resolve()}return Promise.resolve()}clear(){notifyManager.jG.batch(()=>{this.#mutations.forEach(mutation=>{this.notify({type:"removed",mutation})}),this.#mutations.clear(),this.#scopes.clear()})}getAll(){return Array.from(this.#mutations)}find(filters){const defaultedFilters={exact:!0,...filters};return this.getAll().find(mutation=>(0,utils.nJ)(defaultedFilters,mutation))}findAll(filters={}){return this.getAll().filter(mutation=>(0,utils.nJ)(filters,mutation))}notify(event){notifyManager.jG.batch(()=>{this.listeners.forEach(listener=>{listener(event)})})}resumePausedMutations(){const pausedMutations=this.getAll().filter(x=>x.state.isPaused);return notifyManager.jG.batch(()=>Promise.all(pausedMutations.map(mutation=>mutation.continue().catch(utils.lQ))))}};function scopeFor(mutation){return mutation.options.scope?.id}var focusManager=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/focusManager.js"),onlineManager=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/onlineManager.js");function infiniteQueryBehavior(pages){return{onFetch:(context,query)=>{const options=context.options,direction=context.fetchOptions?.meta?.fetchMore?.direction,oldPages=context.state.data?.pages||[],oldPageParams=context.state.data?.pageParams||[];let result={pages:[],pageParams:[]},currentPage=0;const fetchFn=async()=>{let cancelled=!1;const queryFn=(0,utils.ZM)(context.options,context.fetchOptions),fetchPage=async(data,param,previous)=>{if(cancelled)return Promise.reject();if(null==param&&data.pages.length)return Promise.resolve(data);const queryFnContext=(()=>{const queryFnContext2={client:context.client,queryKey:context.queryKey,pageParam:param,direction:previous?"backward":"forward",meta:context.options.meta};var object;return object=queryFnContext2,Object.defineProperty(object,"signal",{enumerable:!0,get:()=>(context.signal.aborted?cancelled=!0:context.signal.addEventListener("abort",()=>{cancelled=!0}),context.signal)}),queryFnContext2})(),page=await queryFn(queryFnContext),{maxPages}=context.options,addTo=previous?utils.ZZ:utils.y9;return{pages:addTo(data.pages,page,maxPages),pageParams:addTo(data.pageParams,param,maxPages)}};if(direction&&oldPages.length){const previous="backward"===direction,oldData={pages:oldPages,pageParams:oldPageParams},param=(previous?getPreviousPageParam:getNextPageParam)(options,oldData);result=await fetchPage(oldData,param,previous)}else{const remainingPages=pages??oldPages.length;do{const param=0===currentPage?oldPageParams[0]??options.initialPageParam:getNextPageParam(options,result);if(currentPage>0&&null==param)break;result=await fetchPage(result,param),currentPage++}while(currentPage<remainingPages)}return result};context.options.persister?context.fetchFn=()=>context.options.persister?.(fetchFn,{client:context.client,queryKey:context.queryKey,meta:context.options.meta,signal:context.signal},query):context.fetchFn=fetchFn}}}function getNextPageParam(options,{pages,pageParams}){const lastIndex=pages.length-1;return pages.length>0?options.getNextPageParam(pages[lastIndex],pages,pageParams[lastIndex],pageParams):void 0}function getPreviousPageParam(options,{pages,pageParams}){return pages.length>0?options.getPreviousPageParam?.(pages[0],pages,pageParams[0],pageParams):void 0}const app_queryClient=new class{#queryCache;#mutationCache;#defaultOptions;#queryDefaults;#mutationDefaults;#mountCount;#unsubscribeFocus;#unsubscribeOnline;constructor(config={}){this.#queryCache=config.queryCache||new QueryCache,this.#mutationCache=config.mutationCache||new MutationCache,this.#defaultOptions=config.defaultOptions||{},this.#queryDefaults=new Map,this.#mutationDefaults=new Map,this.#mountCount=0}mount(){this.#mountCount++,1===this.#mountCount&&(this.#unsubscribeFocus=focusManager.m.subscribe(async focused=>{focused&&(await this.resumePausedMutations(),this.#queryCache.onFocus())}),this.#unsubscribeOnline=onlineManager.t.subscribe(async online=>{online&&(await this.resumePausedMutations(),this.#queryCache.onOnline())}))}unmount(){this.#mountCount--,0===this.#mountCount&&(this.#unsubscribeFocus?.(),this.#unsubscribeFocus=void 0,this.#unsubscribeOnline?.(),this.#unsubscribeOnline=void 0)}isFetching(filters){return this.#queryCache.findAll({...filters,fetchStatus:"fetching"}).length}isMutating(filters){return this.#mutationCache.findAll({...filters,status:"pending"}).length}getQueryData(queryKey){const options=this.defaultQueryOptions({queryKey});return this.#queryCache.get(options.queryHash)?.state.data}ensureQueryData(options){const defaultedOptions=this.defaultQueryOptions(options),query=this.#queryCache.build(this,defaultedOptions),cachedData=query.state.data;return void 0===cachedData?this.fetchQuery(options):(options.revalidateIfStale&&query.isStaleByTime((0,utils.d2)(defaultedOptions.staleTime,query))&&this.prefetchQuery(defaultedOptions),Promise.resolve(cachedData))}getQueriesData(filters){return this.#queryCache.findAll(filters).map(({queryKey,state})=>[queryKey,state.data])}setQueryData(queryKey,updater,options){const defaultedOptions=this.defaultQueryOptions({queryKey}),query=this.#queryCache.get(defaultedOptions.queryHash),prevData=query?.state.data,data=(0,utils.Zw)(updater,prevData);if(void 0!==data)return this.#queryCache.build(this,defaultedOptions).setData(data,{...options,manual:!0})}setQueriesData(filters,updater,options){return notifyManager.jG.batch(()=>this.#queryCache.findAll(filters).map(({queryKey})=>[queryKey,this.setQueryData(queryKey,updater,options)]))}getQueryState(queryKey){const options=this.defaultQueryOptions({queryKey});return this.#queryCache.get(options.queryHash)?.state}removeQueries(filters){const queryCache=this.#queryCache;notifyManager.jG.batch(()=>{queryCache.findAll(filters).forEach(query=>{queryCache.remove(query)})})}resetQueries(filters,options){const queryCache=this.#queryCache;return notifyManager.jG.batch(()=>(queryCache.findAll(filters).forEach(query=>{query.reset()}),this.refetchQueries({type:"active",...filters},options)))}cancelQueries(filters,cancelOptions={}){const defaultedCancelOptions={revert:!0,...cancelOptions},promises=notifyManager.jG.batch(()=>this.#queryCache.findAll(filters).map(query=>query.cancel(defaultedCancelOptions)));return Promise.all(promises).then(utils.lQ).catch(utils.lQ)}invalidateQueries(filters,options={}){return notifyManager.jG.batch(()=>(this.#queryCache.findAll(filters).forEach(query=>{query.invalidate()}),"none"===filters?.refetchType?Promise.resolve():this.refetchQueries({...filters,type:filters?.refetchType??filters?.type??"active"},options)))}refetchQueries(filters,options={}){const fetchOptions={...options,cancelRefetch:options.cancelRefetch??!0},promises=notifyManager.jG.batch(()=>this.#queryCache.findAll(filters).filter(query=>!query.isDisabled()&&!query.isStatic()).map(query=>{let promise=query.fetch(void 0,fetchOptions);return fetchOptions.throwOnError||(promise=promise.catch(utils.lQ)),"paused"===query.state.fetchStatus?Promise.resolve():promise}));return Promise.all(promises).then(utils.lQ)}fetchQuery(options){const defaultedOptions=this.defaultQueryOptions(options);void 0===defaultedOptions.retry&&(defaultedOptions.retry=!1);const query=this.#queryCache.build(this,defaultedOptions);return query.isStaleByTime((0,utils.d2)(defaultedOptions.staleTime,query))?query.fetch(defaultedOptions):Promise.resolve(query.state.data)}prefetchQuery(options){return this.fetchQuery(options).then(utils.lQ).catch(utils.lQ)}fetchInfiniteQuery(options){return options.behavior=infiniteQueryBehavior(options.pages),this.fetchQuery(options)}prefetchInfiniteQuery(options){return this.fetchInfiniteQuery(options).then(utils.lQ).catch(utils.lQ)}ensureInfiniteQueryData(options){return options.behavior=infiniteQueryBehavior(options.pages),this.ensureQueryData(options)}resumePausedMutations(){return onlineManager.t.isOnline()?this.#mutationCache.resumePausedMutations():Promise.resolve()}getQueryCache(){return this.#queryCache}getMutationCache(){return this.#mutationCache}getDefaultOptions(){return this.#defaultOptions}setDefaultOptions(options){this.#defaultOptions=options}setQueryDefaults(queryKey,options){this.#queryDefaults.set((0,utils.EN)(queryKey),{queryKey,defaultOptions:options})}getQueryDefaults(queryKey){const defaults=[...this.#queryDefaults.values()],result={};return defaults.forEach(queryDefault=>{(0,utils.Cp)(queryKey,queryDefault.queryKey)&&Object.assign(result,queryDefault.defaultOptions)}),result}setMutationDefaults(mutationKey,options){this.#mutationDefaults.set((0,utils.EN)(mutationKey),{mutationKey,defaultOptions:options})}getMutationDefaults(mutationKey){const defaults=[...this.#mutationDefaults.values()],result={};return defaults.forEach(queryDefault=>{(0,utils.Cp)(mutationKey,queryDefault.mutationKey)&&Object.assign(result,queryDefault.defaultOptions)}),result}defaultQueryOptions(options){if(options._defaulted)return options;const defaultedOptions={...this.#defaultOptions.queries,...this.getQueryDefaults(options.queryKey),...options,_defaulted:!0};return defaultedOptions.queryHash||(defaultedOptions.queryHash=(0,utils.F$)(defaultedOptions.queryKey,defaultedOptions)),void 0===defaultedOptions.refetchOnReconnect&&(defaultedOptions.refetchOnReconnect="always"!==defaultedOptions.networkMode),void 0===defaultedOptions.throwOnError&&(defaultedOptions.throwOnError=!!defaultedOptions.suspense),!defaultedOptions.networkMode&&defaultedOptions.persister&&(defaultedOptions.networkMode="offlineFirst"),defaultedOptions.queryFn===utils.hT&&(defaultedOptions.enabled=!1),defaultedOptions}defaultMutationOptions(options){return options?._defaulted?options:{...this.#defaultOptions.mutations,...options?.mutationKey&&this.getMutationDefaults(options.mutationKey),...options,_defaulted:!0}}clear(){this.#queryCache.clear(),this.#mutationCache.clear()}}({defaultOptions:{queries:{queryFn:async({queryKey})=>{const path=Array.isArray(queryKey)?String(queryKey[0]):String(queryKey),res=await(0,apiClient.n)(path);if(!res.ok)throw new Error(await res.text());return res.json()}}}});function QueryProvider({children}){return(0,jsx_runtime.jsxs)(QueryClientProvider.Ht,{client:app_queryClient,children:[children,!1]})}QueryProvider.__docgenInfo={description:"",methods:[],displayName:"QueryProvider",props:{children:{required:!0,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""}}};var useSession=__webpack_require__("./src/app/useSession.ts"),react=__webpack_require__("./node_modules/next/dist/compiled/react/index.js"),useMutation=__webpack_require__("./node_modules/@tanstack/react-query/build/modern/useMutation.js"),useQuery=__webpack_require__("./node_modules/@tanstack/react-query/build/modern/useQuery.js");const creditBalanceQueryKey=["/api/credits/balance"];function UserSettingsPage(){var _session_user,_session_user1,_session_user2;const{data:session}=(0,useSession.wV)(),[tab,setTab]=(0,react.useState)("profile"),[usd,setUsd]=(0,react.useState)("0"),{data:balanceData}=function useCreditBalance(enabled=!0){return(0,useQuery.I)({queryKey:creditBalanceQueryKey,enabled})}("credits"===tab),addCreditsMutation=function useAddCredits(){const queryClient=(0,QueryClientProvider.jE)();return(0,useMutation.n)({async mutationFn(usd){await(0,apiClient.n)("/api/credits/add",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({usd})})},onSuccess(){queryClient.invalidateQueries({queryKey:creditBalanceQueryKey})}})}();var _balanceData_balance;const balance=null!==(_balanceData_balance=null==balanceData?void 0:balanceData.balance)&&void 0!==_balanceData_balance?_balanceData_balance:0;return session?(0,jsx_runtime.jsxs)("div",{className:"p-8",children:[(0,jsx_runtime.jsx)("h1",{className:"text-xl font-bold mb-4",children:"User Settings"}),(0,jsx_runtime.jsxs)("div",{className:"flex gap-4 mb-4",children:[(0,jsx_runtime.jsx)("button",{type:"button",onClick:()=>setTab("profile"),className:"px-2 py-1 rounded "+("profile"===tab?"bg-blue-600 text-white":"bg-gray-300 dark:bg-gray-700"),children:"Profile"}),(0,jsx_runtime.jsx)("button",{type:"button",onClick:()=>setTab("credits"),className:"px-2 py-1 rounded "+("credits"===tab?"bg-blue-600 text-white":"bg-gray-300 dark:bg-gray-700"),children:"Credits"})]}),"profile"===tab&&(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsxs)("p",{children:["Email: ",null!==(_ref=null!==(_session_user_email=null===(_session_user=session.user)||void 0===_session_user?void 0:_session_user.email)&&void 0!==_session_user_email?_session_user_email:null===(_session_user1=session.user)||void 0===_session_user1?void 0:_session_user1.name)&&void 0!==_ref?_ref:"Unknown"]}),(0,jsx_runtime.jsxs)("p",{children:["Role: ",null===(_session_user2=session.user)||void 0===_session_user2?void 0:_session_user2.role]})]}),"credits"===tab&&(0,jsx_runtime.jsxs)("div",{className:"grid gap-2 max-w-sm",children:[(0,jsx_runtime.jsxs)("p",{children:["Balance: ",null!=balance?balance:0," credits"]}),(0,jsx_runtime.jsxs)("div",{className:"flex gap-2",children:[(0,jsx_runtime.jsx)("input",{type:"number",value:usd,onChange:e=>setUsd(e.target.value),className:"border p-1 flex-1"}),(0,jsx_runtime.jsx)("button",{type:"button",onClick:()=>addCreditsMutation.mutate(Number(usd),{onSuccess(){setUsd("0")}}),className:"bg-blue-600 text-white px-2 py-1 rounded",children:"Add"})]})]})]}):(0,jsx_runtime.jsx)("div",{className:"p-8",children:"You are not logged in."});var _session_user_email,_ref}UserSettingsPage.__docgenInfo={description:"",methods:[],displayName:"UserSettingsPage"};const SettingsPage_stories={component:UserSettingsPage,title:"Pages/SettingsPage"};const Default={render:()=>(function mockFetch(){__webpack_require__.g.fetch=async(url,options)=>url.endsWith("/api/credits/balance")?new Response(JSON.stringify({balance:3})):(url.endsWith("/api/credits/add")&&(null==options||options.method),new Response(null))}(),(0,jsx_runtime.jsx)(QueryProvider,{children:(0,jsx_runtime.jsx)(UserSettingsPage,{})}))},__namedExportsOrder=["Default"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  render: () => {\n    mockFetch();\n    return <QueryProvider>\n        <SettingsPage />\n      </QueryProvider>;\n  }\n}",...Default.parameters?.docs?.source}}}},"./src/app/useSession.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{CI:()=>next_auth_react__WEBPACK_IMPORTED_MODULE_0__.signOut,Jv:()=>next_auth_react__WEBPACK_IMPORTED_MODULE_0__.signIn,wV:()=>next_auth_react__WEBPACK_IMPORTED_MODULE_0__.useSession});var next_auth_react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/next-auth/react/index.js")},"./src/basePath.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{h:()=>withBasePath});const BASE_PATH=__webpack_require__("./src/lib/config.ts").$.NEXT_PUBLIC_BASE_PATH||"";function withBasePath(path){return`${BASE_PATH}${path}`}},"./src/lib/config.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{$:()=>config});var dotenv__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/dotenv/lib/main.js"),dotenv__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(dotenv__WEBPACK_IMPORTED_MODULE_0__),zod__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/zod/dist/esm/index.js"),process=__webpack_require__("./node_modules/process/browser.js");dotenv__WEBPACK_IMPORTED_MODULE_0___default().config();const envSchema=zod__WEBPACK_IMPORTED_MODULE_1__.z.object({OPENAI_API_KEY:zod__WEBPACK_IMPORTED_MODULE_1__.z.string().optional(),OPENAI_BASE_URL:zod__WEBPACK_IMPORTED_MODULE_1__.z.string().optional(),LLM_PROVIDERS:zod__WEBPACK_IMPORTED_MODULE_1__.z.string().default("openai"),LLM_DRAFT_EMAIL_MODEL:zod__WEBPACK_IMPORTED_MODULE_1__.z.string().default("gpt-4o"),LLM_DRAFT_EMAIL_PROVIDER:zod__WEBPACK_IMPORTED_MODULE_1__.z.string().default("openai"),LLM_ANALYZE_IMAGES_MODEL:zod__WEBPACK_IMPORTED_MODULE_1__.z.string().default("gpt-4o"),LLM_ANALYZE_IMAGES_PROVIDER:zod__WEBPACK_IMPORTED_MODULE_1__.z.string().default("openai"),LLM_OCR_PAPERWORK_MODEL:zod__WEBPACK_IMPORTED_MODULE_1__.z.string().default("gpt-4o"),LLM_OCR_PAPERWORK_PROVIDER:zod__WEBPACK_IMPORTED_MODULE_1__.z.string().default("openai"),LLM_EXTRACT_INFO_MODEL:zod__WEBPACK_IMPORTED_MODULE_1__.z.string().default("gpt-4o"),LLM_EXTRACT_INFO_PROVIDER:zod__WEBPACK_IMPORTED_MODULE_1__.z.string().default("openai"),GOOGLE_MAPS_API_KEY:zod__WEBPACK_IMPORTED_MODULE_1__.z.string().optional(),NEXT_PUBLIC_GOOGLE_MAPS_API_KEY:zod__WEBPACK_IMPORTED_MODULE_1__.z.string().optional(),SMTP_HOST:zod__WEBPACK_IMPORTED_MODULE_1__.z.string().optional(),SMTP_PORT:zod__WEBPACK_IMPORTED_MODULE_1__.z.coerce.number().optional(),SMTP_SECURE:zod__WEBPACK_IMPORTED_MODULE_1__.z.coerce.boolean().optional(),SMTP_USER:zod__WEBPACK_IMPORTED_MODULE_1__.z.string().optional(),SMTP_PASS:zod__WEBPACK_IMPORTED_MODULE_1__.z.string().optional(),SMTP_FROM:zod__WEBPACK_IMPORTED_MODULE_1__.z.string().optional(),MOCK_EMAIL_TO:zod__WEBPACK_IMPORTED_MODULE_1__.z.string().optional(),EMAIL_FILE:zod__WEBPACK_IMPORTED_MODULE_1__.z.string().optional(),SUPER_ADMIN_EMAIL:zod__WEBPACK_IMPORTED_MODULE_1__.z.string().optional(),NEXTAUTH_SECRET:zod__WEBPACK_IMPORTED_MODULE_1__.z.string().optional(),NEXTAUTH_URL:zod__WEBPACK_IMPORTED_MODULE_1__.z.string().optional(),GOOGLE_CLIENT_ID:zod__WEBPACK_IMPORTED_MODULE_1__.z.string().optional(),GOOGLE_CLIENT_SECRET:zod__WEBPACK_IMPORTED_MODULE_1__.z.string().optional(),CASE_STORE_FILE:zod__WEBPACK_IMPORTED_MODULE_1__.z.string().optional(),VIN_SOURCE_FILE:zod__WEBPACK_IMPORTED_MODULE_1__.z.string().optional(),SNAIL_MAIL_FILE:zod__WEBPACK_IMPORTED_MODULE_1__.z.string().optional(),SNAIL_MAIL_PROVIDER_FILE:zod__WEBPACK_IMPORTED_MODULE_1__.z.string().optional(),RETURN_ADDRESS:zod__WEBPACK_IMPORTED_MODULE_1__.z.string().optional(),SNAIL_MAIL_PROVIDER:zod__WEBPACK_IMPORTED_MODULE_1__.z.string().default("mock"),SNAIL_MAIL_OUT_DIR:zod__WEBPACK_IMPORTED_MODULE_1__.z.string().optional(),TWILIO_ACCOUNT_SID:zod__WEBPACK_IMPORTED_MODULE_1__.z.string().optional(),TWILIO_AUTH_TOKEN:zod__WEBPACK_IMPORTED_MODULE_1__.z.string().optional(),TWILIO_FROM_NUMBER:zod__WEBPACK_IMPORTED_MODULE_1__.z.string().optional(),DOCSMIT_BASE_URL:zod__WEBPACK_IMPORTED_MODULE_1__.z.string().optional(),DOCSMIT_EMAIL:zod__WEBPACK_IMPORTED_MODULE_1__.z.string().optional(),DOCSMIT_PASSWORD:zod__WEBPACK_IMPORTED_MODULE_1__.z.string().optional(),DOCSMIT_SOFTWARE_ID:zod__WEBPACK_IMPORTED_MODULE_1__.z.string().optional(),IMAP_HOST:zod__WEBPACK_IMPORTED_MODULE_1__.z.string().optional(),IMAP_PORT:zod__WEBPACK_IMPORTED_MODULE_1__.z.coerce.number().optional(),IMAP_USER:zod__WEBPACK_IMPORTED_MODULE_1__.z.string().optional(),IMAP_PASS:zod__WEBPACK_IMPORTED_MODULE_1__.z.string().optional(),IMAP_TLS:zod__WEBPACK_IMPORTED_MODULE_1__.z.coerce.boolean().default(!0),INBOX_STATE_FILE:zod__WEBPACK_IMPORTED_MODULE_1__.z.string().optional(),NEXT_PUBLIC_BROWSER_DEBUG:zod__WEBPACK_IMPORTED_MODULE_1__.z.coerce.boolean().default(!1),NEXT_PUBLIC_BASE_PATH:zod__WEBPACK_IMPORTED_MODULE_1__.z.string().default("")}).passthrough();const config={...function getConfig(){return envSchema.parse(process.env)}(),NEXT_PUBLIC_GOOGLE_MAPS_API_KEY:process.env.NEXT_PUBLIC_GOOGLE_MAPS_API_KEY,NEXT_PUBLIC_BROWSER_DEBUG:"true"===process.env.NEXT_PUBLIC_BROWSER_DEBUG,NEXT_PUBLIC_BASE_PATH:process.env.NEXT_PUBLIC_BASE_PATH||""}},"?0aec":()=>{},"?3fc0":()=>{},"?4068":()=>{},"?593c":()=>{},"?7bec":()=>{},"?8131":()=>{},"?a0c3":()=>{},"?cad2":()=>{},"?d546":()=>{},"?e7e4":()=>{},"?fbf1":()=>{}}]);