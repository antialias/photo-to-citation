"use strict";(self.webpackChunkapp_scaffold=self.webpackChunkapp_scaffold||[]).push([[165],{"./node_modules/@tanstack/query-core/build/modern/focusManager.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{m:()=>focusManager});var _subscribable_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/subscribable.js"),_utils_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/utils.js"),focusManager=new class extends _subscribable_js__WEBPACK_IMPORTED_MODULE_0__.Q{#focused;#cleanup;#setup;constructor(){super(),this.#setup=onFocus=>{if(!_utils_js__WEBPACK_IMPORTED_MODULE_1__.S$&&window.addEventListener){const listener=()=>onFocus();return window.addEventListener("visibilitychange",listener,!1),()=>{window.removeEventListener("visibilitychange",listener)}}}}onSubscribe(){this.#cleanup||this.setEventListener(this.#setup)}onUnsubscribe(){this.hasListeners()||(this.#cleanup?.(),this.#cleanup=void 0)}setEventListener(setup){this.#setup=setup,this.#cleanup?.(),this.#cleanup=setup(focused=>{"boolean"==typeof focused?this.setFocused(focused):this.onFocus()})}setFocused(focused){this.#focused!==focused&&(this.#focused=focused,this.onFocus())}onFocus(){const isFocused=this.isFocused();this.listeners.forEach(listener=>{listener(isFocused)})}isFocused(){return"boolean"==typeof this.#focused?this.#focused:"hidden"!==globalThis.document?.visibilityState}}},"./node_modules/@tanstack/query-core/build/modern/mutation.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{$:()=>getDefaultState,s:()=>Mutation});var _notifyManager_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/notifyManager.js"),_removable_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/removable.js"),_retryer_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/retryer.js"),Mutation=class extends _removable_js__WEBPACK_IMPORTED_MODULE_0__.k{#observers;#mutationCache;#retryer;constructor(config){super(),this.mutationId=config.mutationId,this.#mutationCache=config.mutationCache,this.#observers=[],this.state=config.state||{context:void 0,data:void 0,error:null,failureCount:0,failureReason:null,isPaused:!1,status:"idle",variables:void 0,submittedAt:0},this.setOptions(config.options),this.scheduleGc()}setOptions(options){this.options=options,this.updateGcTime(this.options.gcTime)}get meta(){return this.options.meta}addObserver(observer){this.#observers.includes(observer)||(this.#observers.push(observer),this.clearGcTimeout(),this.#mutationCache.notify({type:"observerAdded",mutation:this,observer}))}removeObserver(observer){this.#observers=this.#observers.filter(x=>x!==observer),this.scheduleGc(),this.#mutationCache.notify({type:"observerRemoved",mutation:this,observer})}optionalRemove(){this.#observers.length||("pending"===this.state.status?this.scheduleGc():this.#mutationCache.remove(this))}continue(){return this.#retryer?.continue()??this.execute(this.state.variables)}async execute(variables){const onContinue=()=>{this.#dispatch({type:"continue"})};this.#retryer=(0,_retryer_js__WEBPACK_IMPORTED_MODULE_1__.II)({fn:()=>this.options.mutationFn?this.options.mutationFn(variables):Promise.reject(new Error("No mutationFn found")),onFail:(failureCount,error)=>{this.#dispatch({type:"failed",failureCount,error})},onPause:()=>{this.#dispatch({type:"pause"})},onContinue,retry:this.options.retry??0,retryDelay:this.options.retryDelay,networkMode:this.options.networkMode,canRun:()=>this.#mutationCache.canRun(this)});const restored="pending"===this.state.status,isPaused=!this.#retryer.canStart();try{if(restored)onContinue();else{this.#dispatch({type:"pending",variables,isPaused}),await(this.#mutationCache.config.onMutate?.(variables,this));const context=await(this.options.onMutate?.(variables));context!==this.state.context&&this.#dispatch({type:"pending",context,variables,isPaused})}const data=await this.#retryer.start();return await(this.#mutationCache.config.onSuccess?.(data,variables,this.state.context,this)),await(this.options.onSuccess?.(data,variables,this.state.context)),await(this.#mutationCache.config.onSettled?.(data,null,this.state.variables,this.state.context,this)),await(this.options.onSettled?.(data,null,variables,this.state.context)),this.#dispatch({type:"success",data}),data}catch(error){try{throw await(this.#mutationCache.config.onError?.(error,variables,this.state.context,this)),await(this.options.onError?.(error,variables,this.state.context)),await(this.#mutationCache.config.onSettled?.(void 0,error,this.state.variables,this.state.context,this)),await(this.options.onSettled?.(void 0,error,variables,this.state.context)),error}finally{this.#dispatch({type:"error",error})}}finally{this.#mutationCache.runNext(this)}}#dispatch(action){this.state=(state=>{switch(action.type){case"failed":return{...state,failureCount:action.failureCount,failureReason:action.error};case"pause":return{...state,isPaused:!0};case"continue":return{...state,isPaused:!1};case"pending":return{...state,context:action.context,data:void 0,failureCount:0,failureReason:null,error:null,isPaused:action.isPaused,status:"pending",variables:action.variables,submittedAt:Date.now()};case"success":return{...state,data:action.data,failureCount:0,failureReason:null,error:null,status:"success",isPaused:!1};case"error":return{...state,data:void 0,error:action.error,failureCount:state.failureCount+1,failureReason:action.error,isPaused:!1,status:"error"}}})(this.state),_notifyManager_js__WEBPACK_IMPORTED_MODULE_2__.jG.batch(()=>{this.#observers.forEach(observer=>{observer.onMutationUpdate(action)}),this.#mutationCache.notify({mutation:this,type:"updated",action})})}};function getDefaultState(){return{context:void 0,data:void 0,error:null,failureCount:0,failureReason:null,isPaused:!1,status:"idle",variables:void 0,submittedAt:0}}},"./node_modules/@tanstack/query-core/build/modern/notifyManager.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{jG:()=>notifyManager});var defaultScheduler=cb=>setTimeout(cb,0);var notifyManager=function createNotifyManager(){let queue=[],transactions=0,notifyFn=callback=>{callback()},batchNotifyFn=callback=>{callback()},scheduleFn=defaultScheduler;const schedule=callback=>{transactions?queue.push(callback):scheduleFn(()=>{notifyFn(callback)})};return{batch:callback=>{let result;transactions++;try{result=callback()}finally{transactions--,transactions||(()=>{const originalQueue=queue;queue=[],originalQueue.length&&scheduleFn(()=>{batchNotifyFn(()=>{originalQueue.forEach(callback=>{notifyFn(callback)})})})})()}return result},batchCalls:callback=>(...args)=>{schedule(()=>{callback(...args)})},schedule,setNotifyFunction:fn=>{notifyFn=fn},setBatchNotifyFunction:fn=>{batchNotifyFn=fn},setScheduler:fn=>{scheduleFn=fn}}}()},"./node_modules/@tanstack/query-core/build/modern/onlineManager.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{t:()=>onlineManager});var _subscribable_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/subscribable.js"),_utils_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/utils.js"),onlineManager=new class extends _subscribable_js__WEBPACK_IMPORTED_MODULE_0__.Q{#online=!0;#cleanup;#setup;constructor(){super(),this.#setup=onOnline=>{if(!_utils_js__WEBPACK_IMPORTED_MODULE_1__.S$&&window.addEventListener){const onlineListener=()=>onOnline(!0),offlineListener=()=>onOnline(!1);return window.addEventListener("online",onlineListener,!1),window.addEventListener("offline",offlineListener,!1),()=>{window.removeEventListener("online",onlineListener),window.removeEventListener("offline",offlineListener)}}}}onSubscribe(){this.#cleanup||this.setEventListener(this.#setup)}onUnsubscribe(){this.hasListeners()||(this.#cleanup?.(),this.#cleanup=void 0)}setEventListener(setup){this.#setup=setup,this.#cleanup?.(),this.#cleanup=setup(this.setOnline.bind(this))}setOnline(online){this.#online!==online&&(this.#online=online,this.listeners.forEach(listener=>{listener(online)}))}isOnline(){return this.#online}}},"./node_modules/@tanstack/query-core/build/modern/removable.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{k:()=>Removable});var _utils_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/utils.js"),Removable=class{#gcTimeout;destroy(){this.clearGcTimeout()}scheduleGc(){this.clearGcTimeout(),(0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.gn)(this.gcTime)&&(this.#gcTimeout=setTimeout(()=>{this.optionalRemove()},this.gcTime))}updateGcTime(newGcTime){this.gcTime=Math.max(this.gcTime||0,newGcTime??(_utils_js__WEBPACK_IMPORTED_MODULE_0__.S$?1/0:3e5))}clearGcTimeout(){this.#gcTimeout&&(clearTimeout(this.#gcTimeout),this.#gcTimeout=void 0)}}},"./node_modules/@tanstack/query-core/build/modern/retryer.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{II:()=>createRetryer,v_:()=>canFetch,wm:()=>isCancelledError});var _focusManager_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/focusManager.js"),_onlineManager_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/onlineManager.js"),_thenable_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/thenable.js"),_utils_js__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/utils.js");function defaultRetryDelay(failureCount){return Math.min(1e3*2**failureCount,3e4)}function canFetch(networkMode){return"online"!==(networkMode??"online")||_onlineManager_js__WEBPACK_IMPORTED_MODULE_0__.t.isOnline()}var CancelledError=class extends Error{constructor(options){super("CancelledError"),this.revert=options?.revert,this.silent=options?.silent}};function isCancelledError(value){return value instanceof CancelledError}function createRetryer(config){let continueFn,isRetryCancelled=!1,failureCount=0,isResolved=!1;const thenable=(0,_thenable_js__WEBPACK_IMPORTED_MODULE_1__.T)(),canContinue=()=>_focusManager_js__WEBPACK_IMPORTED_MODULE_2__.m.isFocused()&&("always"===config.networkMode||_onlineManager_js__WEBPACK_IMPORTED_MODULE_0__.t.isOnline())&&config.canRun(),canStart=()=>canFetch(config.networkMode)&&config.canRun(),resolve=value=>{isResolved||(isResolved=!0,config.onSuccess?.(value),continueFn?.(),thenable.resolve(value))},reject=value=>{isResolved||(isResolved=!0,config.onError?.(value),continueFn?.(),thenable.reject(value))},pause=()=>new Promise(continueResolve=>{continueFn=value=>{(isResolved||canContinue())&&continueResolve(value)},config.onPause?.()}).then(()=>{continueFn=void 0,isResolved||config.onContinue?.()}),run=()=>{if(isResolved)return;let promiseOrValue;const initialPromise=0===failureCount?config.initialPromise:void 0;try{promiseOrValue=initialPromise??config.fn()}catch(error){promiseOrValue=Promise.reject(error)}Promise.resolve(promiseOrValue).then(resolve).catch(error=>{if(isResolved)return;const retry=config.retry??(_utils_js__WEBPACK_IMPORTED_MODULE_3__.S$?0:3),retryDelay=config.retryDelay??defaultRetryDelay,delay="function"==typeof retryDelay?retryDelay(failureCount,error):retryDelay,shouldRetry=!0===retry||"number"==typeof retry&&failureCount<retry||"function"==typeof retry&&retry(failureCount,error);!isRetryCancelled&&shouldRetry?(failureCount++,config.onFail?.(failureCount,error),(0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.yy)(delay).then(()=>canContinue()?void 0:pause()).then(()=>{isRetryCancelled?reject(error):run()})):reject(error)})};return{promise:thenable,cancel:cancelOptions=>{isResolved||(reject(new CancelledError(cancelOptions)),config.abort?.())},continue:()=>(continueFn?.(),thenable),cancelRetry:()=>{isRetryCancelled=!0},continueRetry:()=>{isRetryCancelled=!1},canStart,start:()=>(canStart()?run():pause().then(run),thenable)}}},"./node_modules/@tanstack/query-core/build/modern/subscribable.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Q:()=>Subscribable});var Subscribable=class{constructor(){this.listeners=new Set,this.subscribe=this.subscribe.bind(this)}subscribe(listener){return this.listeners.add(listener),this.onSubscribe(),()=>{this.listeners.delete(listener),this.onUnsubscribe()}}hasListeners(){return this.listeners.size>0}onSubscribe(){}onUnsubscribe(){}}},"./node_modules/@tanstack/query-core/build/modern/thenable.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{function pendingThenable(){let resolve,reject;const thenable=new Promise((_resolve,_reject)=>{resolve=_resolve,reject=_reject});function finalize(data){Object.assign(thenable,data),delete thenable.resolve,delete thenable.reject}return thenable.status="pending",thenable.catch(()=>{}),thenable.resolve=value=>{finalize({status:"fulfilled",value}),resolve(value)},thenable.reject=reason=>{finalize({status:"rejected",reason}),reject(reason)},thenable}__webpack_require__.d(__webpack_exports__,{T:()=>pendingThenable})},"./node_modules/@tanstack/query-core/build/modern/utils.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Cp:()=>partialMatchKey,EN:()=>hashKey,Eh:()=>resolveEnabled,F$:()=>hashQueryKeyByOptions,GU:()=>shouldThrowError,MK:()=>matchQuery,S$:()=>isServer,ZM:()=>ensureQueryFn,ZZ:()=>addToStart,Zw:()=>functionalUpdate,d2:()=>resolveStaleTime,f8:()=>shallowEqualObjects,gn:()=>isValidTimeout,hT:()=>skipToken,j3:()=>timeUntilStale,lQ:()=>noop,nJ:()=>matchMutation,pl:()=>replaceData,y9:()=>addToEnd,yy:()=>sleep});var isServer="undefined"==typeof window||"Deno"in globalThis;function noop(){}function functionalUpdate(updater,input){return"function"==typeof updater?updater(input):updater}function isValidTimeout(value){return"number"==typeof value&&value>=0&&value!==1/0}function timeUntilStale(updatedAt,staleTime){return Math.max(updatedAt+(staleTime||0)-Date.now(),0)}function resolveStaleTime(staleTime,query){return"function"==typeof staleTime?staleTime(query):staleTime}function resolveEnabled(enabled,query){return"function"==typeof enabled?enabled(query):enabled}function matchQuery(filters,query){const{type="all",exact,fetchStatus,predicate,queryKey,stale}=filters;if(queryKey)if(exact){if(query.queryHash!==hashQueryKeyByOptions(queryKey,query.options))return!1}else if(!partialMatchKey(query.queryKey,queryKey))return!1;if("all"!==type){const isActive=query.isActive();if("active"===type&&!isActive)return!1;if("inactive"===type&&isActive)return!1}return("boolean"!=typeof stale||query.isStale()===stale)&&((!fetchStatus||fetchStatus===query.state.fetchStatus)&&!(predicate&&!predicate(query)))}function matchMutation(filters,mutation){const{exact,status,predicate,mutationKey}=filters;if(mutationKey){if(!mutation.options.mutationKey)return!1;if(exact){if(hashKey(mutation.options.mutationKey)!==hashKey(mutationKey))return!1}else if(!partialMatchKey(mutation.options.mutationKey,mutationKey))return!1}return(!status||mutation.state.status===status)&&!(predicate&&!predicate(mutation))}function hashQueryKeyByOptions(queryKey,options){return(options?.queryKeyHashFn||hashKey)(queryKey)}function hashKey(queryKey){return JSON.stringify(queryKey,(_,val)=>isPlainObject(val)?Object.keys(val).sort().reduce((result,key)=>(result[key]=val[key],result),{}):val)}function partialMatchKey(a,b){return a===b||typeof a==typeof b&&(!(!a||!b||"object"!=typeof a||"object"!=typeof b)&&Object.keys(b).every(key=>partialMatchKey(a[key],b[key])))}function replaceEqualDeep(a,b){if(a===b)return a;const array=isPlainArray(a)&&isPlainArray(b);if(array||isPlainObject(a)&&isPlainObject(b)){const aItems=array?a:Object.keys(a),aSize=aItems.length,bItems=array?b:Object.keys(b),bSize=bItems.length,copy=array?[]:{},aItemsSet=new Set(aItems);let equalItems=0;for(let i=0;i<bSize;i++){const key=array?i:bItems[i];(!array&&aItemsSet.has(key)||array)&&void 0===a[key]&&void 0===b[key]?(copy[key]=void 0,equalItems++):(copy[key]=replaceEqualDeep(a[key],b[key]),copy[key]===a[key]&&void 0!==a[key]&&equalItems++)}return aSize===bSize&&equalItems===aSize?a:copy}return b}function shallowEqualObjects(a,b){if(!b||Object.keys(a).length!==Object.keys(b).length)return!1;for(const key in a)if(a[key]!==b[key])return!1;return!0}function isPlainArray(value){return Array.isArray(value)&&value.length===Object.keys(value).length}function isPlainObject(o){if(!hasObjectPrototype(o))return!1;const ctor=o.constructor;if(void 0===ctor)return!0;const prot=ctor.prototype;return!!hasObjectPrototype(prot)&&(!!prot.hasOwnProperty("isPrototypeOf")&&Object.getPrototypeOf(o)===Object.prototype)}function hasObjectPrototype(o){return"[object Object]"===Object.prototype.toString.call(o)}function sleep(timeout){return new Promise(resolve=>{setTimeout(resolve,timeout)})}function replaceData(prevData,data,options){return"function"==typeof options.structuralSharing?options.structuralSharing(prevData,data):!1!==options.structuralSharing?replaceEqualDeep(prevData,data):data}function addToEnd(items,item,max=0){const newItems=[...items,item];return max&&newItems.length>max?newItems.slice(1):newItems}function addToStart(items,item,max=0){const newItems=[item,...items];return max&&newItems.length>max?newItems.slice(0,-1):newItems}var skipToken=Symbol();function ensureQueryFn(options,fetchOptions){return!options.queryFn&&fetchOptions?.initialPromise?()=>fetchOptions.initialPromise:options.queryFn&&options.queryFn!==skipToken?options.queryFn:()=>Promise.reject(new Error(`Missing queryFn: '${options.queryHash}'`))}function shouldThrowError(throwOnError,params){return"function"==typeof throwOnError?throwOnError(...params):!!throwOnError}},"./node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Ht:()=>QueryClientProvider,jE:()=>useQueryClient});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/next/dist/compiled/react/index.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),QueryClientContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext(void 0),useQueryClient=queryClient=>{const client=react__WEBPACK_IMPORTED_MODULE_0__.useContext(QueryClientContext);if(queryClient)return queryClient;if(!client)throw new Error("No QueryClient set, use QueryClientProvider to set one");return client},QueryClientProvider=({client,children})=>(react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>(client.mount(),()=>{client.unmount()}),[client]),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(QueryClientContext.Provider,{value:client,children}))},"./node_modules/@tanstack/react-query/build/modern/useMutation.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{n:()=>useMutation});var react=__webpack_require__("./node_modules/next/dist/compiled/react/index.js"),mutation=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/mutation.js"),notifyManager=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/notifyManager.js"),subscribable=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/subscribable.js"),utils=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/utils.js"),MutationObserver=class extends subscribable.Q{#client;#currentResult=void 0;#currentMutation;#mutateOptions;constructor(client,options){super(),this.#client=client,this.setOptions(options),this.bindMethods(),this.#updateResult()}bindMethods(){this.mutate=this.mutate.bind(this),this.reset=this.reset.bind(this)}setOptions(options){const prevOptions=this.options;this.options=this.#client.defaultMutationOptions(options),(0,utils.f8)(this.options,prevOptions)||this.#client.getMutationCache().notify({type:"observerOptionsUpdated",mutation:this.#currentMutation,observer:this}),prevOptions?.mutationKey&&this.options.mutationKey&&(0,utils.EN)(prevOptions.mutationKey)!==(0,utils.EN)(this.options.mutationKey)?this.reset():"pending"===this.#currentMutation?.state.status&&this.#currentMutation.setOptions(this.options)}onUnsubscribe(){this.hasListeners()||this.#currentMutation?.removeObserver(this)}onMutationUpdate(action){this.#updateResult(),this.#notify(action)}getCurrentResult(){return this.#currentResult}reset(){this.#currentMutation?.removeObserver(this),this.#currentMutation=void 0,this.#updateResult(),this.#notify()}mutate(variables,options){return this.#mutateOptions=options,this.#currentMutation?.removeObserver(this),this.#currentMutation=this.#client.getMutationCache().build(this.#client,this.options),this.#currentMutation.addObserver(this),this.#currentMutation.execute(variables)}#updateResult(){const state=this.#currentMutation?.state??(0,mutation.$)();this.#currentResult={...state,isPending:"pending"===state.status,isSuccess:"success"===state.status,isError:"error"===state.status,isIdle:"idle"===state.status,mutate:this.mutate,reset:this.reset}}#notify(action){notifyManager.jG.batch(()=>{if(this.#mutateOptions&&this.hasListeners()){const variables=this.#currentResult.variables,context=this.#currentResult.context;"success"===action?.type?(this.#mutateOptions.onSuccess?.(action.data,variables,context),this.#mutateOptions.onSettled?.(action.data,null,variables,context)):"error"===action?.type&&(this.#mutateOptions.onError?.(action.error,variables,context),this.#mutateOptions.onSettled?.(void 0,action.error,variables,context))}this.listeners.forEach(listener=>{listener(this.#currentResult)})})}},QueryClientProvider=__webpack_require__("./node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js");function useMutation(options,queryClient){const client=(0,QueryClientProvider.jE)(queryClient),[observer]=react.useState(()=>new MutationObserver(client,options));react.useEffect(()=>{observer.setOptions(options)},[observer,options]);const result=react.useSyncExternalStore(react.useCallback(onStoreChange=>observer.subscribe(notifyManager.jG.batchCalls(onStoreChange)),[observer]),()=>observer.getCurrentResult(),()=>observer.getCurrentResult()),mutate=react.useCallback((variables,mutateOptions)=>{observer.mutate(variables,mutateOptions).catch(utils.lQ)},[observer]);if(result.error&&(0,utils.GU)(observer.options.throwOnError,[result.error]))throw result.error;return{...result,mutate,mutateAsync:result.mutate}}}}]);