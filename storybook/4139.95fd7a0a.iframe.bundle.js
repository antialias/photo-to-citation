"use strict";(self.webpackChunkapp_scaffold=self.webpackChunkapp_scaffold||[]).push([[4139],{"./node_modules/@radix-ui/react-tabs/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{UC:()=>Content,B8:()=>List,bL:()=>Root2,l9:()=>Trigger});var react=__webpack_require__("./node_modules/next/dist/compiled/react/index.js"),dist=__webpack_require__("./node_modules/@radix-ui/primitive/dist/index.mjs"),react_context_dist=__webpack_require__("./node_modules/@radix-ui/react-context/dist/index.mjs"),react_compose_refs_dist=__webpack_require__("./node_modules/@radix-ui/react-compose-refs/dist/index.mjs"),react_slot_dist=__webpack_require__("./node_modules/@radix-ui/react-slot/dist/index.mjs"),jsx_runtime=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js");var __instanciated=new WeakMap;Map;function at(array,index){if("at"in Array.prototype)return Array.prototype.at.call(array,index);const actualIndex=function toSafeIndex(array,index){const length=array.length,relativeIndex=toSafeInteger(index),actualIndex=relativeIndex>=0?relativeIndex:length+relativeIndex;return actualIndex<0||actualIndex>=length?-1:actualIndex}(array,index);return-1===actualIndex?void 0:array[actualIndex]}function toSafeInteger(number){return number!=number||0===number?0:Math.trunc(number)}var react_id_dist=__webpack_require__("./node_modules/@radix-ui/react-id/dist/index.mjs"),react_primitive_dist=__webpack_require__("./node_modules/@radix-ui/react-primitive/dist/index.mjs"),react_use_callback_ref_dist=__webpack_require__("./node_modules/@radix-ui/react-use-callback-ref/dist/index.mjs"),react_use_controllable_state_dist=__webpack_require__("./node_modules/@radix-ui/react-use-controllable-state/dist/index.mjs"),DirectionContext=react.createContext(void 0);function useDirection(localDir){const globalDir=react.useContext(DirectionContext);return localDir||globalDir||"ltr"}var ENTRY_FOCUS="rovingFocusGroup.onEntryFocus",EVENT_OPTIONS={bubbles:!1,cancelable:!0},GROUP_NAME="RovingFocusGroup",[Collection,useCollection,createCollectionScope]=function createCollection(name){const PROVIDER_NAME=name+"CollectionProvider",[createCollectionContext,createCollectionScope]=(0,react_context_dist.A)(PROVIDER_NAME),[CollectionProviderImpl,useCollectionContext]=createCollectionContext(PROVIDER_NAME,{collectionRef:{current:null},itemMap:new Map}),CollectionProvider=props=>{const{scope,children}=props,ref=react.useRef(null),itemMap=react.useRef(new Map).current;return(0,jsx_runtime.jsx)(CollectionProviderImpl,{scope,itemMap,collectionRef:ref,children})};CollectionProvider.displayName=PROVIDER_NAME;const COLLECTION_SLOT_NAME=name+"CollectionSlot",CollectionSlotImpl=(0,react_slot_dist.TL)(COLLECTION_SLOT_NAME),CollectionSlot=react.forwardRef((props,forwardedRef)=>{const{scope,children}=props,context=useCollectionContext(COLLECTION_SLOT_NAME,scope),composedRefs=(0,react_compose_refs_dist.s)(forwardedRef,context.collectionRef);return(0,jsx_runtime.jsx)(CollectionSlotImpl,{ref:composedRefs,children})});CollectionSlot.displayName=COLLECTION_SLOT_NAME;const ITEM_SLOT_NAME=name+"CollectionItemSlot",ITEM_DATA_ATTR="data-radix-collection-item",CollectionItemSlotImpl=(0,react_slot_dist.TL)(ITEM_SLOT_NAME),CollectionItemSlot=react.forwardRef((props,forwardedRef)=>{const{scope,children,...itemData}=props,ref=react.useRef(null),composedRefs=(0,react_compose_refs_dist.s)(forwardedRef,ref),context=useCollectionContext(ITEM_SLOT_NAME,scope);return react.useEffect(()=>(context.itemMap.set(ref,{ref,...itemData}),()=>{context.itemMap.delete(ref)})),(0,jsx_runtime.jsx)(CollectionItemSlotImpl,{[ITEM_DATA_ATTR]:"",ref:composedRefs,children})});return CollectionItemSlot.displayName=ITEM_SLOT_NAME,[{Provider:CollectionProvider,Slot:CollectionSlot,ItemSlot:CollectionItemSlot},function useCollection(scope){const context=useCollectionContext(name+"CollectionConsumer",scope);return react.useCallback(()=>{const collectionNode=context.collectionRef.current;if(!collectionNode)return[];const orderedNodes=Array.from(collectionNode.querySelectorAll("[data-radix-collection-item]"));return Array.from(context.itemMap.values()).sort((a,b)=>orderedNodes.indexOf(a.ref.current)-orderedNodes.indexOf(b.ref.current))},[context.collectionRef,context.itemMap])},createCollectionScope]}(GROUP_NAME),[createRovingFocusGroupContext,createRovingFocusGroupScope]=(0,react_context_dist.A)(GROUP_NAME,[createCollectionScope]),[RovingFocusProvider,useRovingFocusContext]=createRovingFocusGroupContext(GROUP_NAME),RovingFocusGroup=react.forwardRef((props,forwardedRef)=>(0,jsx_runtime.jsx)(Collection.Provider,{scope:props.__scopeRovingFocusGroup,children:(0,jsx_runtime.jsx)(Collection.Slot,{scope:props.__scopeRovingFocusGroup,children:(0,jsx_runtime.jsx)(RovingFocusGroupImpl,{...props,ref:forwardedRef})})}));RovingFocusGroup.displayName=GROUP_NAME;var RovingFocusGroupImpl=react.forwardRef((props,forwardedRef)=>{const{__scopeRovingFocusGroup,orientation,loop=!1,dir,currentTabStopId:currentTabStopIdProp,defaultCurrentTabStopId,onCurrentTabStopIdChange,onEntryFocus,preventScrollOnEntryFocus=!1,...groupProps}=props,ref=react.useRef(null),composedRefs=(0,react_compose_refs_dist.s)(forwardedRef,ref),direction=useDirection(dir),[currentTabStopId,setCurrentTabStopId]=(0,react_use_controllable_state_dist.i)({prop:currentTabStopIdProp,defaultProp:defaultCurrentTabStopId??null,onChange:onCurrentTabStopIdChange,caller:GROUP_NAME}),[isTabbingBackOut,setIsTabbingBackOut]=react.useState(!1),handleEntryFocus=(0,react_use_callback_ref_dist.c)(onEntryFocus),getItems=useCollection(__scopeRovingFocusGroup),isClickFocusRef=react.useRef(!1),[focusableItemsCount,setFocusableItemsCount]=react.useState(0);return react.useEffect(()=>{const node=ref.current;if(node)return node.addEventListener(ENTRY_FOCUS,handleEntryFocus),()=>node.removeEventListener(ENTRY_FOCUS,handleEntryFocus)},[handleEntryFocus]),(0,jsx_runtime.jsx)(RovingFocusProvider,{scope:__scopeRovingFocusGroup,orientation,dir:direction,loop,currentTabStopId,onItemFocus:react.useCallback(tabStopId=>setCurrentTabStopId(tabStopId),[setCurrentTabStopId]),onItemShiftTab:react.useCallback(()=>setIsTabbingBackOut(!0),[]),onFocusableItemAdd:react.useCallback(()=>setFocusableItemsCount(prevCount=>prevCount+1),[]),onFocusableItemRemove:react.useCallback(()=>setFocusableItemsCount(prevCount=>prevCount-1),[]),children:(0,jsx_runtime.jsx)(react_primitive_dist.sG.div,{tabIndex:isTabbingBackOut||0===focusableItemsCount?-1:0,"data-orientation":orientation,...groupProps,ref:composedRefs,style:{outline:"none",...props.style},onMouseDown:(0,dist.m)(props.onMouseDown,()=>{isClickFocusRef.current=!0}),onFocus:(0,dist.m)(props.onFocus,event=>{const isKeyboardFocus=!isClickFocusRef.current;if(event.target===event.currentTarget&&isKeyboardFocus&&!isTabbingBackOut){const entryFocusEvent=new CustomEvent(ENTRY_FOCUS,EVENT_OPTIONS);if(event.currentTarget.dispatchEvent(entryFocusEvent),!entryFocusEvent.defaultPrevented){const items=getItems().filter(item=>item.focusable);focusFirst([items.find(item=>item.active),items.find(item=>item.id===currentTabStopId),...items].filter(Boolean).map(item=>item.ref.current),preventScrollOnEntryFocus)}}isClickFocusRef.current=!1}),onBlur:(0,dist.m)(props.onBlur,()=>setIsTabbingBackOut(!1))})})}),RovingFocusGroupItem=react.forwardRef((props,forwardedRef)=>{const{__scopeRovingFocusGroup,focusable=!0,active=!1,tabStopId,children,...itemProps}=props,autoId=(0,react_id_dist.B)(),id=tabStopId||autoId,context=useRovingFocusContext("RovingFocusGroupItem",__scopeRovingFocusGroup),isCurrentTabStop=context.currentTabStopId===id,getItems=useCollection(__scopeRovingFocusGroup),{onFocusableItemAdd,onFocusableItemRemove,currentTabStopId}=context;return react.useEffect(()=>{if(focusable)return onFocusableItemAdd(),()=>onFocusableItemRemove()},[focusable,onFocusableItemAdd,onFocusableItemRemove]),(0,jsx_runtime.jsx)(Collection.ItemSlot,{scope:__scopeRovingFocusGroup,id,focusable,active,children:(0,jsx_runtime.jsx)(react_primitive_dist.sG.span,{tabIndex:isCurrentTabStop?0:-1,"data-orientation":context.orientation,...itemProps,ref:forwardedRef,onMouseDown:(0,dist.m)(props.onMouseDown,event=>{focusable?context.onItemFocus(id):event.preventDefault()}),onFocus:(0,dist.m)(props.onFocus,()=>context.onItemFocus(id)),onKeyDown:(0,dist.m)(props.onKeyDown,event=>{if("Tab"===event.key&&event.shiftKey)return void context.onItemShiftTab();if(event.target!==event.currentTarget)return;const focusIntent=function getFocusIntent(event,orientation,dir){const key=function getDirectionAwareKey(key,dir){return"rtl"!==dir?key:"ArrowLeft"===key?"ArrowRight":"ArrowRight"===key?"ArrowLeft":key}(event.key,dir);return"vertical"===orientation&&["ArrowLeft","ArrowRight"].includes(key)||"horizontal"===orientation&&["ArrowUp","ArrowDown"].includes(key)?void 0:MAP_KEY_TO_FOCUS_INTENT[key]}(event,context.orientation,context.dir);if(void 0!==focusIntent){if(event.metaKey||event.ctrlKey||event.altKey||event.shiftKey)return;event.preventDefault();let candidateNodes=getItems().filter(item=>item.focusable).map(item=>item.ref.current);if("last"===focusIntent)candidateNodes.reverse();else if("prev"===focusIntent||"next"===focusIntent){"prev"===focusIntent&&candidateNodes.reverse();const currentIndex=candidateNodes.indexOf(event.currentTarget);candidateNodes=context.loop?function wrapArray(array,startIndex){return array.map((_,index)=>array[(startIndex+index)%array.length])}(candidateNodes,currentIndex+1):candidateNodes.slice(currentIndex+1)}setTimeout(()=>focusFirst(candidateNodes))}}),children:"function"==typeof children?children({isCurrentTabStop,hasTabStop:null!=currentTabStopId}):children})})});RovingFocusGroupItem.displayName="RovingFocusGroupItem";var MAP_KEY_TO_FOCUS_INTENT={ArrowLeft:"prev",ArrowUp:"prev",ArrowRight:"next",ArrowDown:"next",PageUp:"first",Home:"first",PageDown:"last",End:"last"};function focusFirst(candidates,preventScroll=!1){const PREVIOUSLY_FOCUSED_ELEMENT=document.activeElement;for(const candidate of candidates){if(candidate===PREVIOUSLY_FOCUSED_ELEMENT)return;if(candidate.focus({preventScroll}),document.activeElement!==PREVIOUSLY_FOCUSED_ELEMENT)return}}var Root=RovingFocusGroup,Item=RovingFocusGroupItem,react_presence_dist=__webpack_require__("./node_modules/@radix-ui/react-presence/dist/index.mjs"),[createTabsContext,createTabsScope]=(0,react_context_dist.A)("Tabs",[createRovingFocusGroupScope]),useRovingFocusGroupScope=createRovingFocusGroupScope(),[TabsProvider,useTabsContext]=createTabsContext("Tabs"),Tabs=react.forwardRef((props,forwardedRef)=>{const{__scopeTabs,value:valueProp,onValueChange,defaultValue,orientation="horizontal",dir,activationMode="automatic",...tabsProps}=props,direction=useDirection(dir),[value,setValue]=(0,react_use_controllable_state_dist.i)({prop:valueProp,onChange:onValueChange,defaultProp:defaultValue??"",caller:"Tabs"});return(0,jsx_runtime.jsx)(TabsProvider,{scope:__scopeTabs,baseId:(0,react_id_dist.B)(),value,onValueChange:setValue,orientation,dir:direction,activationMode,children:(0,jsx_runtime.jsx)(react_primitive_dist.sG.div,{dir:direction,"data-orientation":orientation,...tabsProps,ref:forwardedRef})})});Tabs.displayName="Tabs";var TabsList=react.forwardRef((props,forwardedRef)=>{const{__scopeTabs,loop=!0,...listProps}=props,context=useTabsContext("TabsList",__scopeTabs),rovingFocusGroupScope=useRovingFocusGroupScope(__scopeTabs);return(0,jsx_runtime.jsx)(Root,{asChild:!0,...rovingFocusGroupScope,orientation:context.orientation,dir:context.dir,loop,children:(0,jsx_runtime.jsx)(react_primitive_dist.sG.div,{role:"tablist","aria-orientation":context.orientation,...listProps,ref:forwardedRef})})});TabsList.displayName="TabsList";var TabsTrigger=react.forwardRef((props,forwardedRef)=>{const{__scopeTabs,value,disabled=!1,...triggerProps}=props,context=useTabsContext("TabsTrigger",__scopeTabs),rovingFocusGroupScope=useRovingFocusGroupScope(__scopeTabs),triggerId=makeTriggerId(context.baseId,value),contentId=makeContentId(context.baseId,value),isSelected=value===context.value;return(0,jsx_runtime.jsx)(Item,{asChild:!0,...rovingFocusGroupScope,focusable:!disabled,active:isSelected,children:(0,jsx_runtime.jsx)(react_primitive_dist.sG.button,{type:"button",role:"tab","aria-selected":isSelected,"aria-controls":contentId,"data-state":isSelected?"active":"inactive","data-disabled":disabled?"":void 0,disabled,id:triggerId,...triggerProps,ref:forwardedRef,onMouseDown:(0,dist.m)(props.onMouseDown,event=>{disabled||0!==event.button||!1!==event.ctrlKey?event.preventDefault():context.onValueChange(value)}),onKeyDown:(0,dist.m)(props.onKeyDown,event=>{[" ","Enter"].includes(event.key)&&context.onValueChange(value)}),onFocus:(0,dist.m)(props.onFocus,()=>{const isAutomaticActivation="manual"!==context.activationMode;isSelected||disabled||!isAutomaticActivation||context.onValueChange(value)})})})});TabsTrigger.displayName="TabsTrigger";var TabsContent=react.forwardRef((props,forwardedRef)=>{const{__scopeTabs,value,forceMount,children,...contentProps}=props,context=useTabsContext("TabsContent",__scopeTabs),triggerId=makeTriggerId(context.baseId,value),contentId=makeContentId(context.baseId,value),isSelected=value===context.value,isMountAnimationPreventedRef=react.useRef(isSelected);return react.useEffect(()=>{const rAF=requestAnimationFrame(()=>isMountAnimationPreventedRef.current=!1);return()=>cancelAnimationFrame(rAF)},[]),(0,jsx_runtime.jsx)(react_presence_dist.C,{present:forceMount||isSelected,children:({present})=>(0,jsx_runtime.jsx)(react_primitive_dist.sG.div,{"data-state":isSelected?"active":"inactive","data-orientation":context.orientation,role:"tabpanel","aria-labelledby":triggerId,hidden:!present,id:contentId,tabIndex:0,...contentProps,ref:forwardedRef,style:{...props.style,animationDuration:isMountAnimationPreventedRef.current?"0s":void 0},children:present&&children})})});function makeTriggerId(baseId,value){return`${baseId}-trigger-${value}`}function makeContentId(baseId,value){return`${baseId}-content-${value}`}TabsContent.displayName="TabsContent";var Root2=Tabs,List=TabsList,Trigger=TabsTrigger,Content=TabsContent},"./node_modules/@tanstack/query-core/build/modern/queryClient.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{E:()=>QueryClient});var utils=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/utils.js"),modern_query=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/query.js"),notifyManager=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/notifyManager.js"),subscribable=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/subscribable.js"),QueryCache=class extends subscribable.Q{constructor(config={}){super(),this.config=config,this.#queries=new Map}#queries;build(client,options,state){const queryKey=options.queryKey,queryHash=options.queryHash??(0,utils.F$)(queryKey,options);let query=this.get(queryHash);return query||(query=new modern_query.X({client,queryKey,queryHash,options:client.defaultQueryOptions(options),state,defaultOptions:client.getQueryDefaults(queryKey)}),this.add(query)),query}add(query){this.#queries.has(query.queryHash)||(this.#queries.set(query.queryHash,query),this.notify({type:"added",query}))}remove(query){const queryInMap=this.#queries.get(query.queryHash);queryInMap&&(query.destroy(),queryInMap===query&&this.#queries.delete(query.queryHash),this.notify({type:"removed",query}))}clear(){notifyManager.jG.batch(()=>{this.getAll().forEach(query=>{this.remove(query)})})}get(queryHash){return this.#queries.get(queryHash)}getAll(){return[...this.#queries.values()]}find(filters){const defaultedFilters={exact:!0,...filters};return this.getAll().find(query=>(0,utils.MK)(defaultedFilters,query))}findAll(filters={}){const queries=this.getAll();return Object.keys(filters).length>0?queries.filter(query=>(0,utils.MK)(filters,query)):queries}notify(event){notifyManager.jG.batch(()=>{this.listeners.forEach(listener=>{listener(event)})})}onFocus(){notifyManager.jG.batch(()=>{this.getAll().forEach(query=>{query.onFocus()})})}onOnline(){notifyManager.jG.batch(()=>{this.getAll().forEach(query=>{query.onOnline()})})}},modern_mutation=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/mutation.js"),MutationCache=class extends subscribable.Q{constructor(config={}){super(),this.config=config,this.#mutations=new Set,this.#scopes=new Map,this.#mutationId=0}#mutations;#scopes;#mutationId;build(client,options,state){const mutation=new modern_mutation.s({mutationCache:this,mutationId:++this.#mutationId,options:client.defaultMutationOptions(options),state});return this.add(mutation),mutation}add(mutation){this.#mutations.add(mutation);const scope=scopeFor(mutation);if("string"==typeof scope){const scopedMutations=this.#scopes.get(scope);scopedMutations?scopedMutations.push(mutation):this.#scopes.set(scope,[mutation])}this.notify({type:"added",mutation})}remove(mutation){if(this.#mutations.delete(mutation)){const scope=scopeFor(mutation);if("string"==typeof scope){const scopedMutations=this.#scopes.get(scope);if(scopedMutations)if(scopedMutations.length>1){const index=scopedMutations.indexOf(mutation);-1!==index&&scopedMutations.splice(index,1)}else scopedMutations[0]===mutation&&this.#scopes.delete(scope)}}this.notify({type:"removed",mutation})}canRun(mutation){const scope=scopeFor(mutation);if("string"==typeof scope){const mutationsWithSameScope=this.#scopes.get(scope),firstPendingMutation=mutationsWithSameScope?.find(m=>"pending"===m.state.status);return!firstPendingMutation||firstPendingMutation===mutation}return!0}runNext(mutation){const scope=scopeFor(mutation);if("string"==typeof scope){const foundMutation=this.#scopes.get(scope)?.find(m=>m!==mutation&&m.state.isPaused);return foundMutation?.continue()??Promise.resolve()}return Promise.resolve()}clear(){notifyManager.jG.batch(()=>{this.#mutations.forEach(mutation=>{this.notify({type:"removed",mutation})}),this.#mutations.clear(),this.#scopes.clear()})}getAll(){return Array.from(this.#mutations)}find(filters){const defaultedFilters={exact:!0,...filters};return this.getAll().find(mutation=>(0,utils.nJ)(defaultedFilters,mutation))}findAll(filters={}){return this.getAll().filter(mutation=>(0,utils.nJ)(filters,mutation))}notify(event){notifyManager.jG.batch(()=>{this.listeners.forEach(listener=>{listener(event)})})}resumePausedMutations(){const pausedMutations=this.getAll().filter(x=>x.state.isPaused);return notifyManager.jG.batch(()=>Promise.all(pausedMutations.map(mutation=>mutation.continue().catch(utils.lQ))))}};function scopeFor(mutation){return mutation.options.scope?.id}var focusManager=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/focusManager.js"),onlineManager=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/onlineManager.js");function infiniteQueryBehavior(pages){return{onFetch:(context,query)=>{const options=context.options,direction=context.fetchOptions?.meta?.fetchMore?.direction,oldPages=context.state.data?.pages||[],oldPageParams=context.state.data?.pageParams||[];let result={pages:[],pageParams:[]},currentPage=0;const fetchFn=async()=>{let cancelled=!1;const queryFn=(0,utils.ZM)(context.options,context.fetchOptions),fetchPage=async(data,param,previous)=>{if(cancelled)return Promise.reject();if(null==param&&data.pages.length)return Promise.resolve(data);const queryFnContext=(()=>{const queryFnContext2={client:context.client,queryKey:context.queryKey,pageParam:param,direction:previous?"backward":"forward",meta:context.options.meta};var object;return object=queryFnContext2,Object.defineProperty(object,"signal",{enumerable:!0,get:()=>(context.signal.aborted?cancelled=!0:context.signal.addEventListener("abort",()=>{cancelled=!0}),context.signal)}),queryFnContext2})(),page=await queryFn(queryFnContext),{maxPages}=context.options,addTo=previous?utils.ZZ:utils.y9;return{pages:addTo(data.pages,page,maxPages),pageParams:addTo(data.pageParams,param,maxPages)}};if(direction&&oldPages.length){const previous="backward"===direction,oldData={pages:oldPages,pageParams:oldPageParams},param=(previous?getPreviousPageParam:getNextPageParam)(options,oldData);result=await fetchPage(oldData,param,previous)}else{const remainingPages=pages??oldPages.length;do{const param=0===currentPage?oldPageParams[0]??options.initialPageParam:getNextPageParam(options,result);if(currentPage>0&&null==param)break;result=await fetchPage(result,param),currentPage++}while(currentPage<remainingPages)}return result};context.options.persister?context.fetchFn=()=>context.options.persister?.(fetchFn,{client:context.client,queryKey:context.queryKey,meta:context.options.meta,signal:context.signal},query):context.fetchFn=fetchFn}}}function getNextPageParam(options,{pages,pageParams}){const lastIndex=pages.length-1;return pages.length>0?options.getNextPageParam(pages[lastIndex],pages,pageParams[lastIndex],pageParams):void 0}function getPreviousPageParam(options,{pages,pageParams}){return pages.length>0?options.getPreviousPageParam?.(pages[0],pages,pageParams[0],pageParams):void 0}var QueryClient=class{#queryCache;#mutationCache;#defaultOptions;#queryDefaults;#mutationDefaults;#mountCount;#unsubscribeFocus;#unsubscribeOnline;constructor(config={}){this.#queryCache=config.queryCache||new QueryCache,this.#mutationCache=config.mutationCache||new MutationCache,this.#defaultOptions=config.defaultOptions||{},this.#queryDefaults=new Map,this.#mutationDefaults=new Map,this.#mountCount=0}mount(){this.#mountCount++,1===this.#mountCount&&(this.#unsubscribeFocus=focusManager.m.subscribe(async focused=>{focused&&(await this.resumePausedMutations(),this.#queryCache.onFocus())}),this.#unsubscribeOnline=onlineManager.t.subscribe(async online=>{online&&(await this.resumePausedMutations(),this.#queryCache.onOnline())}))}unmount(){this.#mountCount--,0===this.#mountCount&&(this.#unsubscribeFocus?.(),this.#unsubscribeFocus=void 0,this.#unsubscribeOnline?.(),this.#unsubscribeOnline=void 0)}isFetching(filters){return this.#queryCache.findAll({...filters,fetchStatus:"fetching"}).length}isMutating(filters){return this.#mutationCache.findAll({...filters,status:"pending"}).length}getQueryData(queryKey){const options=this.defaultQueryOptions({queryKey});return this.#queryCache.get(options.queryHash)?.state.data}ensureQueryData(options){const defaultedOptions=this.defaultQueryOptions(options),query=this.#queryCache.build(this,defaultedOptions),cachedData=query.state.data;return void 0===cachedData?this.fetchQuery(options):(options.revalidateIfStale&&query.isStaleByTime((0,utils.d2)(defaultedOptions.staleTime,query))&&this.prefetchQuery(defaultedOptions),Promise.resolve(cachedData))}getQueriesData(filters){return this.#queryCache.findAll(filters).map(({queryKey,state})=>[queryKey,state.data])}setQueryData(queryKey,updater,options){const defaultedOptions=this.defaultQueryOptions({queryKey}),query=this.#queryCache.get(defaultedOptions.queryHash),prevData=query?.state.data,data=(0,utils.Zw)(updater,prevData);if(void 0!==data)return this.#queryCache.build(this,defaultedOptions).setData(data,{...options,manual:!0})}setQueriesData(filters,updater,options){return notifyManager.jG.batch(()=>this.#queryCache.findAll(filters).map(({queryKey})=>[queryKey,this.setQueryData(queryKey,updater,options)]))}getQueryState(queryKey){const options=this.defaultQueryOptions({queryKey});return this.#queryCache.get(options.queryHash)?.state}removeQueries(filters){const queryCache=this.#queryCache;notifyManager.jG.batch(()=>{queryCache.findAll(filters).forEach(query=>{queryCache.remove(query)})})}resetQueries(filters,options){const queryCache=this.#queryCache;return notifyManager.jG.batch(()=>(queryCache.findAll(filters).forEach(query=>{query.reset()}),this.refetchQueries({type:"active",...filters},options)))}cancelQueries(filters,cancelOptions={}){const defaultedCancelOptions={revert:!0,...cancelOptions},promises=notifyManager.jG.batch(()=>this.#queryCache.findAll(filters).map(query=>query.cancel(defaultedCancelOptions)));return Promise.all(promises).then(utils.lQ).catch(utils.lQ)}invalidateQueries(filters,options={}){return notifyManager.jG.batch(()=>(this.#queryCache.findAll(filters).forEach(query=>{query.invalidate()}),"none"===filters?.refetchType?Promise.resolve():this.refetchQueries({...filters,type:filters?.refetchType??filters?.type??"active"},options)))}refetchQueries(filters,options={}){const fetchOptions={...options,cancelRefetch:options.cancelRefetch??!0},promises=notifyManager.jG.batch(()=>this.#queryCache.findAll(filters).filter(query=>!query.isDisabled()&&!query.isStatic()).map(query=>{let promise=query.fetch(void 0,fetchOptions);return fetchOptions.throwOnError||(promise=promise.catch(utils.lQ)),"paused"===query.state.fetchStatus?Promise.resolve():promise}));return Promise.all(promises).then(utils.lQ)}fetchQuery(options){const defaultedOptions=this.defaultQueryOptions(options);void 0===defaultedOptions.retry&&(defaultedOptions.retry=!1);const query=this.#queryCache.build(this,defaultedOptions);return query.isStaleByTime((0,utils.d2)(defaultedOptions.staleTime,query))?query.fetch(defaultedOptions):Promise.resolve(query.state.data)}prefetchQuery(options){return this.fetchQuery(options).then(utils.lQ).catch(utils.lQ)}fetchInfiniteQuery(options){return options.behavior=infiniteQueryBehavior(options.pages),this.fetchQuery(options)}prefetchInfiniteQuery(options){return this.fetchInfiniteQuery(options).then(utils.lQ).catch(utils.lQ)}ensureInfiniteQueryData(options){return options.behavior=infiniteQueryBehavior(options.pages),this.ensureQueryData(options)}resumePausedMutations(){return onlineManager.t.isOnline()?this.#mutationCache.resumePausedMutations():Promise.resolve()}getQueryCache(){return this.#queryCache}getMutationCache(){return this.#mutationCache}getDefaultOptions(){return this.#defaultOptions}setDefaultOptions(options){this.#defaultOptions=options}setQueryDefaults(queryKey,options){this.#queryDefaults.set((0,utils.EN)(queryKey),{queryKey,defaultOptions:options})}getQueryDefaults(queryKey){const defaults=[...this.#queryDefaults.values()],result={};return defaults.forEach(queryDefault=>{(0,utils.Cp)(queryKey,queryDefault.queryKey)&&Object.assign(result,queryDefault.defaultOptions)}),result}setMutationDefaults(mutationKey,options){this.#mutationDefaults.set((0,utils.EN)(mutationKey),{mutationKey,defaultOptions:options})}getMutationDefaults(mutationKey){const defaults=[...this.#mutationDefaults.values()],result={};return defaults.forEach(queryDefault=>{(0,utils.Cp)(mutationKey,queryDefault.mutationKey)&&Object.assign(result,queryDefault.defaultOptions)}),result}defaultQueryOptions(options){if(options._defaulted)return options;const defaultedOptions={...this.#defaultOptions.queries,...this.getQueryDefaults(options.queryKey),...options,_defaulted:!0};return defaultedOptions.queryHash||(defaultedOptions.queryHash=(0,utils.F$)(defaultedOptions.queryKey,defaultedOptions)),void 0===defaultedOptions.refetchOnReconnect&&(defaultedOptions.refetchOnReconnect="always"!==defaultedOptions.networkMode),void 0===defaultedOptions.throwOnError&&(defaultedOptions.throwOnError=!!defaultedOptions.suspense),!defaultedOptions.networkMode&&defaultedOptions.persister&&(defaultedOptions.networkMode="offlineFirst"),defaultedOptions.queryFn===utils.hT&&(defaultedOptions.enabled=!1),defaultedOptions}defaultMutationOptions(options){return options?._defaulted?options:{...this.#defaultOptions.mutations,...options?.mutationKey&&this.getMutationDefaults(options.mutationKey),...options,_defaulted:!0}}clear(){this.#queryCache.clear(),this.#mutationCache.clear()}}},"./node_modules/@tanstack/react-query-devtools/build/modern/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{E:()=>ReactQueryDevtools2});var ReactQueryDevtools2=function(){return null}}}]);