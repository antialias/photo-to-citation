(()=>{"use strict";var __webpack_modules__={},__webpack_module_cache__={};function __webpack_require__(moduleId){var cachedModule=__webpack_module_cache__[moduleId];if(void 0!==cachedModule)return cachedModule.exports;var module=__webpack_module_cache__[moduleId]={id:moduleId,loaded:!1,exports:{}};return __webpack_modules__[moduleId].call(module.exports,module,module.exports,__webpack_require__),module.loaded=!0,module.exports}let ort,tf;__webpack_require__.m=__webpack_modules__,__webpack_require__.amdD=function(){throw new Error("define cannot be used indirect")},__webpack_require__.amdO={},__webpack_require__.n=module=>{var getter=module&&module.__esModule?()=>module.default:()=>module;return __webpack_require__.d(getter,{a:getter}),getter},__webpack_require__.d=(exports,definition)=>{for(var key in definition)__webpack_require__.o(definition,key)&&!__webpack_require__.o(exports,key)&&Object.defineProperty(exports,key,{enumerable:!0,get:definition[key]})},__webpack_require__.f={},__webpack_require__.e=chunkId=>Promise.all(Object.keys(__webpack_require__.f).reduce((promises,key)=>(__webpack_require__.f[key](chunkId,promises),promises),[])),__webpack_require__.u=chunkId=>chunkId+"."+{48:"34a45197",209:"199a0007",537:"e4816b2a",602:"ba840a57",687:"0ac7c7e0",851:"e3f24191",962:"5569c51d",970:"ec9cd351"}[chunkId]+".iframe.bundle.js",__webpack_require__.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),__webpack_require__.o=(obj,prop)=>Object.prototype.hasOwnProperty.call(obj,prop),__webpack_require__.r=exports=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(exports,"__esModule",{value:!0})},__webpack_require__.nmd=module=>(module.paths=[],module.children||(module.children=[]),module),__webpack_require__.p="",(()=>{__webpack_require__.b=self.location+"";var installedChunks={333:1};__webpack_require__.f.i=(chunkId,promises)=>{installedChunks[chunkId]||importScripts(__webpack_require__.p+__webpack_require__.u(chunkId))};var chunkLoadingGlobal=self.webpackChunkapp_scaffold=self.webpackChunkapp_scaffold||[],parentChunkLoadingFunction=chunkLoadingGlobal.push.bind(chunkLoadingGlobal);chunkLoadingGlobal.push=data=>{var[chunkIds,moreModules,runtime]=data;for(var moduleId in moreModules)__webpack_require__.o(moreModules,moduleId)&&(__webpack_require__.m[moduleId]=moreModules[moduleId]);for(runtime&&runtime(__webpack_require__);chunkIds.length;)installedChunks[chunkIds.pop()]=1;parentChunkLoadingFunction(data)}})();let session=null;self.onmessage=async e=>{const{type,modelUrl,image}=e.data;if("load"===type&&modelUrl)session=await async function loadOnnxModel(url){var _ort_env;return ort||(ort=await Promise.all([__webpack_require__.e(537),__webpack_require__.e(48),__webpack_require__.e(687)]).then(__webpack_require__.bind(__webpack_require__,"./node_modules/onnxruntime-web/dist/ort.bundle.min.mjs")),(null===(_ort_env=ort.env)||void 0===_ort_env?void 0:_ort_env.init)&&await ort.env.init()),ort.InferenceSession.create(url)}(modelUrl),self.postMessage({type:"ready"});else if("analyze"===type&&image&&session){const result=await async function analyzeViolationLocal(images,options){if(0===images.length)throw new Error("images");const results=[];let idx=0;for(const img of images){var _options_progress;if(null===(_options_progress=options.progress)||void 0===_options_progress||_options_progress.call(options,{stage:"run",index:idx,total:images.length}),options.onnx){const arr=Float32Array.from(img.data,v=>v/255),tensor=new ort.Tensor("float32",arr,[1,img.height,img.width,4]),out=await options.onnx.run({input:tensor});results.push(out.result)}else if(options.tflite){const tensor=null==tf?void 0:tf.browser.fromPixels(img).expandDims(0),out=options.tflite.predict(tensor);results.push(await out.data())}else{const mean=img.data.reduce((a,b)=>a+b,0)/img.data.length;results.push({plate:`DBG${Math.round(mean)}`})}idx++}var _results_;const best=null!==(_results_=results[0])&&void 0!==_results_?_results_:{};var _best_type;return{violationType:null!==(_best_type=best.type)&&void 0!==_best_type?_best_type:"unknown",details:"",vehicle:{licensePlateNumber:best.plate},images:{}}}([image],{onnx:session});self.postMessage({type:"result",result})}}})();