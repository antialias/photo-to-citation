// Generated by ts-to-zod
import { z } from "zod";

import { violationReportSchema } from "./openai";

export const sentEmailSchema = z.object({
  to: z.string(),
  subject: z.string(),
  body: z.string(),
  attachments: z.array(z.string()),
  sentAt: z.string(),
  replyTo: z.string().optional().nullable(),
});

export const ownershipRequestSchema = z.object({
  moduleId: z.string(),
  requestedAt: z.string(),
  checkNumber: z.string().optional().nullable(),
});

export const threadImageSchema = z.object({
  id: z.string(),
  threadParent: z.string().optional().nullable(),
  url: z.string(),
  uploadedAt: z.string(),
  ocrText: z.string().optional().nullable(),
  ocrInfo: z.any().optional().nullable(),
});

export const caseSchema = z.object({
  id: z.string(),
  photos: z.array(z.string()),
  photoTimes: z.record(z.string().nullable()),
  photoGps: z
    .record(
      z
        .object({
          lat: z.number(),
          lon: z.number(),
        })
        .nullable(),
    )
    .optional(),
  createdAt: z.string(),
  updatedAt: z.string(),
  gps: z
    .object({
      lat: z.number(),
      lon: z.number(),
    })
    .optional()
    .nullable(),
  streetAddress: z.string().optional().nullable(),
  intersection: z.string().optional().nullable(),
  vin: z.string().optional().nullable(),
  vinOverride: z.string().optional().nullable(),
  analysis: violationReportSchema.optional().nullable(),
  analysisOverrides: violationReportSchema.partial().optional().nullable(),
  analysisStatus: z.union([
    z.literal("pending"),
    z.literal("complete"),
    z.literal("failed"),
    z.literal("canceled"),
  ]),
  analysisStatusCode: z.number().optional().nullable(),
  analysisError: z
    .union([
      z.literal("truncated"),
      z.literal("parse"),
      z.literal("schema"),
      z.literal("images"),
    ])
    .optional()
    .nullable(),
  analysisProgress: z.any().optional().nullable(),
  sentEmails: z.array(sentEmailSchema).optional(),
  ownershipRequests: z.array(ownershipRequestSchema).optional(),
  threadImages: z.array(threadImageSchema).optional(),
});
