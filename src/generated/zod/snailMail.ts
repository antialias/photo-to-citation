// Generated by ts-to-zod
import { z } from "zod";

export const mailingAddressSchema = z.object({
  name: z.string().optional(),
  address1: z.string(),
  address2: z.string().optional(),
  city: z.string(),
  state: z.string(),
  postalCode: z.string(),
});

export const snailMailOptionsSchema = z.object({
  to: mailingAddressSchema,
  from: mailingAddressSchema,
  subject: z.string().optional(),
  contents: z.string(),
});

export const snailMailStatusSchema = z.object({
  id: z.string(),
  status: z.string(),
  trackingId: z.string().optional(),
  shortfall: z.number().optional(),
});

export const snailMailProviderCheckSchema = z.object({
  ready: z.boolean(),
  message: z.string().optional(),
});

export const snailMailProviderTestResultSchema = z.object({
  success: z.boolean(),
  message: z.string().optional(),
});

export const snailMailProviderSchema = z.object({
  id: z.string(),
  label: z.string(),
  docs: z.string(),
  send: z
    .function()
    .args(snailMailOptionsSchema, z.record(z.unknown()).optional())
    .returns(z.promise(snailMailStatusSchema)),
  getStatus: z
    .function()
    .args(z.string(), z.record(z.unknown()).optional())
    .returns(z.promise(snailMailStatusSchema.nullable()))
    .optional(),
  check: z
    .function()
    .args(z.record(z.unknown()).optional())
    .returns(snailMailProviderCheckSchema)
    .optional(),
  test: z
    .function()
    .args(z.record(z.unknown()).optional())
    .returns(z.promise(snailMailProviderTestResultSchema))
    .optional(),
  poll: z
    .function()
    .args(z.record(z.unknown()).optional())
    .returns(z.promise(z.void()))
    .optional(),
  webhooks: z
    .record(z.function().args(z.unknown()).returns(z.promise(z.void())))
    .optional(),
});
